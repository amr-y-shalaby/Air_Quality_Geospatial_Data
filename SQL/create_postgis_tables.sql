--MAKING NEW TABLES FOR THE PROJECTED DATA (USING EPSG: 26917 NAD83 UTM ZONE 17N)
DROP TABLE IF EXISTS PUBLIC.FACT_GTA_TRAFFIC_PROJ;
CREATE TABLE PUBLIC.FACT_GTA_TRAFFIC_PROJ AS
  SELECT *
  FROM PUBLIC.fact_gta_traffic_arcgis;

ALTER TABLE PUBLIC.FACT_GTA_TRAFFIC_PROJ
  ALTER COLUMN geom -- there is NO geom colum,n in fact_gta_traffic_arcgis
  TYPE Geometry(Point, 26917)
  USING ST_Transform(geom, 26917);

DROP TABLE IF EXISTS PUBLIC.FACT_AIR_DATA_PROJ;
CREATE TABLE PUBLIC.FACT_AIR_DATA_PROJ AS
  SELECT *
  FROM PUBLIC.fact_combined_air_data
  WHERE cgndb_id LIKE 'FCKTB' --SELECTING ONLY FOR AIR QUALITY STATIONS IN THE TORONTO BOUNDARY
  OR cgndb_id LIKE 'FCWYG'
  OR cgndb_id LIKE 'FDQBU'
  OR cgndb_id LIKE 'FDQBX'
  OR cgndb_id LIKE 'FEUZB';

ALTER TABLE PUBLIC.fact_combined_air_data
  ALTER COLUMN geom
  TYPE Geometry(Point, 26917)
  USING ST_Transform(geom, 26917);

--VERIFYING OUR DATA IS IN THE PROJECTED COORDINATE SYSTEM THAT WE WANT
SELECT DISTINCT ST_SRID(geom) AS airdata_check
  FROM FACT_AIR_DATA_PROJ;

SELECT DISTINCT ST_SRID(geom) AS gtatraffic_check
  FROM FACT_GTA_TRAFFIC_PROJ;

--DETERMINING THE ENTIRE AVERAGE AT EACH STATION
SELECT CAST(AVG(air_qualit) AS DECIMAL(10, 2)) AS station_avg, cgndb_id
  FROM FACT_AIR_DATA_PROJ
  GROUP BY cgndb_id;

--SUBSETTING OUR DATA FOR THE TIME OF DAY AND CALCULATING THE AVERAGE AIR QUALITY
SELECT CAST(AVG(air_qualit) AS DECIMAL(10, 2)) AS dawn_avg, cgndb_id --FROM MIDNIGHT TO 5AM
  FROM FACT_AIR_DATA_PROJ
  WHERE hours_utc BETWEEN '0' AND '5'
  GROUP BY cgndb_id;

SELECT CAST(AVG(air_qualit) AS DECIMAL(10, 2)) AS morning_avg, cgndb_id --FROM 6AM TO 11AM
  FROM FACT_AIR_DATA_PROJ
  WHERE hours_utc BETWEEN '6' AND '11'
  GROUP BY cgndb_id;

SELECT CAST(AVG(air_qualit) AS DECIMAL(10, 2)) AS noon_avg, cgndb_id --FROM NOON TO 5PM
  FROM FACT_AIR_DATA_PROJ
  WHERE hours_utc BETWEEN '12' AND '17'
  GROUP BY cgndb_id;

SELECT CAST(AVG(air_qualit) AS DECIMAL(10, 2)) AS evening_avg, cgndb_id --FROM 6PM TO 11PM
  FROM FACT_AIR_DATA_PROJ
  WHERE hours_utc BETWEEN '18' AND '23'
  GROUP BY cgndb_id;

--SUBSETTING OUR DATA FOR THE DAY OF WEEK AND CALCULATING THE AVERAGE AIR QUALITY
SELECT CAST(AVG(airdata_proj.air_qualit) AS DECIMAL(10, 2)) AS monday_avg, cgndb_id --PARSING FOR MONDAY
  FROM FACT_AIR_DATA_PROJ
  WHERE day = 'Monday'
  GROUP BY cgndb_id;

SELECT CAST(AVG(airdata_proj.air_qualit) AS DECIMAL(10, 2)) AS tuesday_avg, cgndb_id --PARSING FOR TUESDAY
  FROM FACT_AIR_DATA_PROJ
  WHERE day = 'Tuesday'
  GROUP BY cgndb_id;

SELECT CAST(AVG(airdata_proj.air_qualit) AS DECIMAL(10, 2)) AS wednesday_avg, cgndb_id --PARSING FOR WEDNESDAY
  FROM FACT_AIR_DATA_PROJ
  WHERE day = 'Wednesday'
  GROUP BY cgndb_id;

SELECT CAST(AVG(airdata_proj.air_qualit) AS DECIMAL(10, 2)) AS thursday_avg, cgndb_id --PARSING FOR THURSDAY
  FROM FACT_AIR_DATA_PROJ
  WHERE day = 'Thursday'
  GROUP BY cgndb_id;

SELECT CAST(AVG(airdata_proj.air_qualit) AS DECIMAL(10, 2)) AS friday_avg, cgndb_id --PARSING FOR FRIDAY
  FROM FACT_AIR_DATA_PROJ
  WHERE day = 'Friday'
  GROUP BY cgndb_id;

SELECT CAST(AVG(airdata_proj.air_qualit) AS DECIMAL(10, 2)) AS saturday_avg, cgndb_id --PARSING FOR SATURDAY
  FROM FACT_AIR_DATA_PROJ
  WHERE day = 'Saturday'
  GROUP BY cgndb_id;

SELECT CAST(AVG(airdata_proj.air_qualit) AS DECIMAL(10, 2)) AS sunday_avg, cgndb_id --PARSING FOR SUNDAY
  FROM FACT_AIR_DATA_PROJ
  WHERE day = 'Sunday'
  GROUP BY cgndb_id;

--CREATING A BUFFER AROUND THE AIR QUALITY STATIONS TO INTERACT WITH THE TRAFFIC DATA AND INPUTTING TO NEW TABLE
--(THERE ARE 42 STATIONS AND ONLY ONE BUFFER WILL BE GENERATED PER STATION)
DROP TABLE IF EXISTS PUBLIC.FACT_AIR_BUFFER;
CREATE TABLE PUBLIC.FACT_AIR_BUFFER  AS
  SELECT DISTINCT ON (cgndb_id) ST_Buffer(ST_SetSRID(ST_MakePoint(geo_long, geo_lat), 4326)::geography, 1000)::geometry AS buffered_point, cgndb_id --1KM buffer
  FROM PUBLIC.FACT_AIR_DATA_PROJ;

--SPATIAL JOIN TO AGGREGATE AND CALCULATE THE AVERAGE TRAFFIC COUNT WITHIN THE BUFFER ZONE
DROP TABLE IF EXISTS PUBLIC.FACT_AVG_TRAFFIC;
CREATE TABLE PUBLIC.FACT_AVG_TRAFFIC  AS
  SELECT ab.buffered_point AS buffer_geometry, AVG(gt.f8hr_vehic) AS avg_traffic_count
  FROM PUBLIC.FACT_AIR_BUFFER ab
  LEFT JOIN PUBLIC.FACT_GTA_TRAFFIC_PROJ gt ON ST_Contains(ab.buffered_point::geometry, ST_Transform(gt.geom, 26917))
  GROUP BY ab.buffered_point;

--RUNNING THIS CODE GAVE AN ERROR AS THE BUFFER LAYER WAS IN A DIFFERENT COORDINATE SYSTEM (OR A LACK THEREOF)
--THE FOLLOWING WILL ASSIGN AND UPDATE THE PCS FOR THE LAYER AND VERIFY
ALTER TABLE air_buffer
  ALTER COLUMN buffered_point
  TYPE Geometry(Polygon, 26917)
  USING ST_Transform(buffered_point, 26917);

SELECT DISTINCT ST_SRID(buffered_point) AS airbuffer_check
  FROM PUBLIC.FACT_AIR_BUFFER;

--WE CAN NOW RERUN THE CODE
DROP TABLE IF EXISTS PUBLIC.FACT_AVG_TRAFFIC;
CREATE TABLE PUBLIC.FACT_AVG_TRAFFIC  AS
  SELECT buffer.cgndb_id AS buffer_id, ST_AsText(buffer.buffered_point) AS buffered_point, AVG(gt.f8hr_vehic) AS avg_traffic_count
  FROM PUBLIC.FACT_AIR_BUFFER buffer
  JOIN PUBLIC.FACT_GTA_TRAFFIC_PROJ  gt
  ON ST_Contains(buffer.buffered_point, gt.geom)
  GROUP BY buffer.cgndb_id, buffer.buffered_point;

--UPDATE THE BUFFER PCS AND VERIFY
UPDATE PUBLIC.FACT_AVG_TRAFFIC  --IF THE SRID IS 0/NULL, THEN IT WILL BE REPLACED WITH THE APPROPRIATE EPSG
  SET buffered_point = ST_SetSRID(buffered_point, 26917)
  WHERE ST_SRID(buffered_point) = 0;

ALTER TABLE PUBLIC.FACT_AVG_TRAFFIC
  ALTER COLUMN buffered_point
  TYPE Geometry(Polygon, 26917)
  USING ST_Transform(buffered_point, 26917);

SELECT DISTINCT ST_SRID(buffered_point) AS airbuffer_check
  FROM PUBLIC.FACT_AVG_TRAFFIC